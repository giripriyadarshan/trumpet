//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub auth_id: i32,
    #[sea_orm(column_type = "Text")]
    pub full_name: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub profile_picture: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub location_or_region: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::auth::Entity",
        from = "Column::AuthId",
        to = "super::auth::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Auth,
}

impl Related<super::auth::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Auth.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
